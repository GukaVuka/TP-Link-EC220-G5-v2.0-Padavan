name: Cleanup Old Releases

on:
  schedule:
    - cron: '0 0 */3 * *'
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Delete old releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          # Ensure we have access to GitHub CLI
          gh auth status || exit 1
          
          echo "Fetching all releases"
          
          # Get all releases without branch filtering
          if ! releases=$(gh release list --repo "$REPO" --limit 999); then
            echo "Error occurred while fetching releases"
            exit 1
          fi
          
          # Debug: Show all releases
          echo "All releases:"
          echo "$releases"
          
          # Extract release tags (using the third column which contains the actual tag)
          release_tags=$(echo "$releases" | awk '{print $3}' | grep .)
          
          # Count releases
          count=$(echo "$releases" | grep -c '^')
          echo "Found $count releases"
          
          # If more than 1 release exists, delete all except the newest
          if [ "$count" -gt 1 ] ; then
            echo "Release tags to delete:"
            echo "$release_tags" | tail -n +2
            
            echo "$release_tags" | tail -n +2 | while read -r release; do
              echo "Deleting release: $release"
              gh release delete "$release" --repo "$REPO" -y || echo "Failed to delete $release"
            done
          else
            echo "No old releases to clean up"
          fi
